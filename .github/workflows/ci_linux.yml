name: Build and Test on Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CXX: g++
  CC: gcc
  proc_num: $(nproc)

jobs:
  compile-with-make:
    runs-on: ubuntu-latest # https://github.com/actions/runner-images

    steps:
    - uses: actions/checkout@v2
    
    - name: install dependences
      run: |
           sudo apt-get install -y git g++ make libssl-dev libgflags-dev libprotobuf-dev libprotoc-dev protobuf-compiler libleveldb-dev
    - name: config_brpc
      run: |
           ./config_brpc.sh --header="/usr/include" --libs="/usr/lib" --nodebugsymbols --cxx=${{env.CXX}} --cc=${{env.CC}}

    - name: compile
      run: |
           make -j ${{env.proc_num}}
    - name: make all examples
      run: |
           sh tools/make_all_examples
           
  compile-with-cmake:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: install dependences
      run: |
           sudo apt-get install -y git g++ make libssl-dev libgflags-dev libprotobuf-dev libprotoc-dev protobuf-compiler libleveldb-dev
    - name: cmake 
      run: |
           mkdir build
           cd build
           cmake ..
    - name: compile
      run: |
           export CC=${{env.CC}}
           export CXX=${{env.CXX}}
           cd build
           make -j ${{env.proc_num}}
           
  compile-with-bazel:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: compile
      run: |
           bazel build -j ${{env.proc_num}} -c opt --copt -DHAVE_ZLIB=1 //...
